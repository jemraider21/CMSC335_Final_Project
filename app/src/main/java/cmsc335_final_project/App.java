/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cmsc335_final_project;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import cmsc335_final_project.panels.impls.CarPanel;
import cmsc335_final_project.panels.impls.ControlPanel;
import cmsc335_final_project.panels.impls.TimePanel;
import cmsc335_final_project.panels.impls.TrafficLightPanel;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class App extends Application {
    private static TimePanel timePanel;
    private static TrafficLightPanel trafficLightPanel;
    private static CarPanel carPanel;
    private static ControlPanel controlPanel;

    private ExecutorService executorService;

    public static void main(String[] args) {
        timePanel = new TimePanel();
        trafficLightPanel = new TrafficLightPanel();
        carPanel = new CarPanel();
        controlPanel = new ControlPanel();
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) throws Exception {
        // Create the main layout pane
        BorderPane root = new BorderPane();

        // Initalize the time panel and add it to the top of the main layout
        timePanel.initPanel(root);

        VBox centerBox = new VBox(20);
        trafficLightPanel.initPanel(centerBox, executorService);
        carPanel.initPanel(centerBox, executorService);
        root.setCenter(centerBox);

        controlPanel.initPanel(root, carPanel, trafficLightPanel);

        // Set the scene with the main layout pane and default dimensions (e.g.,
        // 800x600)
        Scene scene = new Scene(root, 800, 600);

        // Set the stage properties
        primaryStage.setTitle("Traffic Congestion Mitigation Simulation");
        primaryStage.setScene(scene);

        // Show the primary stage/window
        primaryStage.show();

        // Start the time update
        timePanel.startUpdate();
        trafficLightPanel.startUpdate();
        carPanel.startUpdate();
    }

    @Override
    public void init() {
        executorService = Executors.newFixedThreadPool(2);
    }

    @Override
    public void stop() {
        executorService.shutdownNow();
    }

}
